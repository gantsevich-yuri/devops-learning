---
- name: Install Nexus in docker on Ubuntu 22.04
  hosts: all
  become: true
  vars:
    user: fox
    nexus_data_dir: /opt/nexus-data

  tasks:
    - name: Install required system packages
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg
        - lsb-release

    - name: Create directory for Docker GPG key
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Docker GPG key
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      args:
        creates: /etc/apt/keyrings/docker.gpg

    - name: Fix permissions on Docker GPG key
      file:
        path: /etc/apt/keyrings/docker.gpg
        mode: '0644'

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        filename: docker
        state: present

    - name: Install Docker Engine
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest
        update_cache: yes

    - name: Ensure Docker service is running
      service:
        name: docker
        state: started
        enabled: yes
    
    - name: Ensure group "docker" exists
      ansible.builtin.group:
        name: docker
        state: present
    
    - name: Adding user to docker group
      user:
        name: "{{ user }}"
        groups: docker
        append: yes
    
    - name: Create Nexus data directory
      file:
        path: "{{ nexus_data_dir }}"
        state: directory
        owner: "200"
        group: "200"
        mode: '0755'
        recurse: yes

    - name: Start Nexus containerd
      community.docker.docker_container:
        name: nexus
        image: sonatype/nexus3
        state: started
        restart_policy: unless-stopped
        published_ports:
          - "8081:8081"
          - "8082:8082"
        volumes:
          - "{{nexus_data_dir }}:/nexus-data"
    
    - name: Wait for Nexus to become available on port 8081
      wait_for:
        port: 8081
        delay: 10
        timeout: 120


    